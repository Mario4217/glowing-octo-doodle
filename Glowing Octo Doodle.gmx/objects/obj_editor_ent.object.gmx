<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>gp_obj_index = -1;
alarm[0] = 1;
outputs = ds_list_create();
drag = false;
drag_x = 0;
drag_y = 0;
attr = ds_map_create();
overwrite_attr = ds_map_create();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_list_destroy(outputs);
ds_map_destroy(attr);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (gp_obj_index == -1){
  instance_destroy();
}else{
  var map = gp_objects[? gp_obj_index];
  sprite_index = map[? "sprite"];
  image_index = 0;
  image_speed = 0;
  var attr_map = map[? "attr"];
  var key = ds_map_find_first(attr_map);
  for (var i=0; i&lt;ds_map_size(attr_map); i+=1)
  {
     var src_attr = attr_map[? key];
     attr[? key] = src_attr[? "default"];
     key = ds_map_find_next(attr_map,key);
  };
}
if (ds_map_size(overwrite_attr) &gt; 0){
  var key = ds_map_find_first(overwrite_attr);
  for (var i=0; i&lt;ds_map_size(overwrite_attr); i+=1)
  {
    attr[? key] = overwrite_attr[? key];
    var key = ds_map_find_next(overwrite_attr, key);
  };
}
ds_map_destroy(overwrite_attr);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (mouse_x &gt; x-sprite_xoffset &amp;&amp; mouse_x &lt; x+sprite_width-sprite_xoffset &amp;&amp; mouse_y &gt; y-sprite_yoffset &amp;&amp; mouse_y &lt; y+sprite_height-sprite_yoffset){
  ui_mouseHover = id;
}

if (obj_editor.inst_selected == id){
  draw_set_color(c_lime);
  if (mouse_check_button_pressed(mb_right)){
    obj_editor.inst_selected = -1;
  }
  if (keyboard_check_pressed(vk_delete)){
    console_command_execute("editor_destroy");
  }
  if (ui_hover == id){
    if (mouse_check_button_pressed(mb_left)){
      drag = true;
      drag_x = x - mouse_x;
      drag_y = y - mouse_y;
    }
  }
}
if (drag){
  var snap = 16;
  if (keyboard_check(vk_alt)){snap = 1;}
  x = round((mouse_x + drag_x)/snap)*snap;
  y = round((mouse_y + drag_y)/snap)*snap;
  if (mouse_check_button_released(mb_left)){
    drag = false;
  }
}
if (ui_hover == id &amp;&amp; obj_editor.inst_selected != id){
  if (mouse_check_button_pressed(mb_left)){
    obj_editor.inst_selected = id;
  }
}

depth = obj_editor.world_height*32 - y
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
if (ui_hover == id &amp;&amp; obj_editor.inst_selected != id){
  draw_set_color(c_red);
  draw_rectangle(x-sprite_xoffset-1, y-sprite_yoffset-1,  x+sprite_width-sprite_xoffset-1, y+sprite_height-sprite_yoffset-1,true)
  if (mouse_check_button_pressed(mb_left)){
    drag = true;
    drag_x = mouse_x - x;
    drag_y = mouse_y - y;
  }
}

if (obj_editor.inst_selected == id){
  draw_set_color(c_lime);
  draw_rectangle(x-sprite_xoffset-1, y-sprite_yoffset-1,  x+sprite_width-sprite_xoffset-1, y+sprite_height-sprite_yoffset-1,true)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
