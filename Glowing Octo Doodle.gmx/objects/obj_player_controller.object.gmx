<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>player_pawn = instance_create(100, 100, obj_player_pawn);

move_spd = 400;

//moved bind stuff to the init object
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var xmov = bind_check("player_horizontal");
var ymov = bind_check("player_vertical");

//player_pawn.dir = 3;
player_pawn.walking = false;

if (xmov &gt; 0){
  player_pawn.dir = 0;
  player_pawn.walking = true;
}else if (xmov &lt; 0){
  player_pawn.dir = 2;
  player_pawn.walking = true;
}else if(ymov &gt; 0){
  player_pawn.dir = 3;
  player_pawn.walking = true;
}else if(ymov &lt; 0){
  player_pawn.dir = 1;
  player_pawn.walking = true;
}

var dir = point_direction(0, 0, xmov, ymov);

var spd = game_delta_time * move_spd * point_distance(0, 0, xmov, ymov);

if (point_distance(0, 0, xmov*spd, ymov*spd) &gt; 0) {
    move(spd, dir, player_pawn);
}

view_xview[0] = player_pawn.x - view_wview[0]/2;
view_yview[0] = player_pawn.y - view_hview[0]/2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
