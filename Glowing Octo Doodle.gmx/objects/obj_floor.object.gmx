<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (room == rm_editor){
  grid = obj_editor.grid_floor;
}
if (room == rm_game){
  grid = obj_world.grid_floor;
}
chunk_size = 16;

width = ds_grid_width(grid);
height = ds_grid_height(grid);

//light_surf = surface_create(1,1);

for (var i=0; i&lt;ceil(ds_grid_width(grid)/chunk_size); i+=1){
  for (var j=0; j&lt;ceil(ds_grid_height(grid) / chunk_size); j+=1){
    chunk_floor[i, j] = -1;
    chunk_shadow[i, j] = -1;
    //world_floor_update_chunk(i, j);
    //world_shadow_update_chunk(i, j);
  };
};
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>world_chunk_free_all();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>world_chunk_free_all();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
draw_set_font(ft_console)
for (i=0; i&lt;width/chunk_size; i+=1){
  for (j=0; j&lt;height/chunk_size; j+=1){
    draw_text(i*16,j*16,surface_exists(chunk_floor[i, j]));
  };
};
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = ds_grid_height(grid)*32+1
draw_set_color(c_white);


for (var i=max(floor(view_xview[0]/32/chunk_size),0); i&lt;min(ceil(view_wview[0]+view_xview[0])/32/chunk_size, ds_grid_width(grid)/chunk_size); i+=1){
  for (var j=max(floor(view_yview[0]/32/chunk_size),0); j&lt;min(ceil(view_hview[0]+view_yview[0])/32/chunk_size, ds_grid_height(grid)/chunk_size); j+=1){
    if (!surface_exists(chunk_floor[i, j])){
      world_floor_update_chunk(i, j);
    }
    if (!surface_exists(chunk_shadow[i, j])){
      world_shadow_update_chunk(i, j);
    }
    draw_surface(chunk_floor[i, j], i*chunk_size*32, j*chunk_size*32);
    draw_surface_ext(chunk_shadow[i, j], i*chunk_size*32, j*chunk_size*32, 1, 1, 0, c_black, 1-sun_intensity);
  };
};



/*
for (var i=max(floor(view_xview[0]/32),0); i&lt;min(ceil((view_wview[0]+view_xview[0])/32),ds_grid_width(grid)); i+=1){
  for (var j=max(floor(view_yview[0]/32),0); j&lt;min(ceil((view_hview[0]+view_yview[0])/32),ds_grid_height(grid)); j+=1){
    var index = grid[# i, j];
    var tex = floorlist[index, 0];
    var xx = i*32;
    var yy = j*32;
    var w = floorlist[index, 1];
    var h = floorlist[index, 2];
    draw_primitive_begin_texture(pr_trianglestrip, tex);
    draw_vertex_texture(xx, yy, (xx % w)/w, (yy % h)/h);
    draw_vertex_texture(xx+32, yy, ((xx % w)+32)/w, (yy % h)/h);
    draw_vertex_texture(xx, yy+32, (xx % w)/w, ((yy % h)+32)/h);
    draw_vertex_texture(xx+32, yy+32, ((xx % w) + 32)/w, ((yy % h)+32)/h);
    draw_primitive_end();
  };
};
*/
/*
draw_set_color(c_black)
draw_set_alpha(1);
if (surface_exists(light_surf)){
  surface_resize(light_surf, view_wview[0], view_hview[0]);
}else{
  light_surf = surface_create(view_wview[0], view_hview[0]);
}
surface_set_target(light_surf)
draw_clear_alpha(0, 0);
with (obj_editor_ent){
  draw_shadow();
}
with (obj_parent_gameplay){
  draw_shadow();
}
surface_reset_target();
draw_surface_ext(light_surf, view_xview[0], view_yview[0], 1, 1, 0, c_black, 1-sun_intensity)
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
